##
# General settings
##

export EDITOR=vim
export VISUAL=vim
export PAGER=less

if command -v 'ruby' >/dev/null 2>&1; then
    export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
fi

##
# Locations
##

ZSHRC="${${(%):-%N}:A}"
ZSH="${ZSHRC:h}"

##
# Keybindings
##

KEYTIMEOUT=1

bindkey -v
bindkey '^[[1~' beginning-of-line        # Home
bindkey '^[[2~' overwrite-mode           # Insert
bindkey '^[[3~' delete-char              # Delete
bindkey '^[[4~' end-of-line              # End
bindkey '^[[5~' history-search-backward  # PageUp
bindkey '^[[6~' history-search-forward   # PageDown
bindkey '^?' backward-delete-char        # Backspace
bindkey '^H' backward-delete-char        # Backspace

# Move VIM Keybindings
bindkey '^E'    history-search-backward
bindkey '^Y'    history-search-forward
bindkey -a 'gg' beginning-of-buffer-or-history
bindkey -a 'g~' vi-oper-swap-case
bindkey -a G end-of-buffer-or-history
bindkey '^G' what-cursor-position

# Edit command line in $EDITOR
autoload -U    edit-command-line
zle -N         edit-command-line
bindkey -a '!' edit-command-line

##
# Pushd
##

setopt auto_pushd               # make cd push old dir in dir stack
setopt pushd_ignore_dups        # no duplicates in dir stack
setopt pushd_silent             # no dir stack after pushd or popd
setopt pushd_to_home            # `pushd` = `pushd $HOME`        # complete as much of a completion until it gets ambiguous.

##
# History
##

HISTFILE=~/.zsh_history         # where to store zsh config
HISTSIZE=1024                   # big history
SAVEHIST=1024                   # big history
setopt append_history           # append
setopt hist_ignore_all_dups     # no duplicate
unsetopt hist_ignore_space      # ignore space prefixed commands
setopt hist_reduce_blanks       # trim blanks
setopt hist_verify              # show before executing history commands
setopt inc_append_history       # add commands as they are typed, don't wait until shell exit 
setopt share_history            # share hist between sessions
setopt bang_hist                # !keyword

##
# Various
##

setopt auto_cd                  # if command is a path, cd into it
setopt auto_remove_slash        # self explicit
setopt chase_links              # resolve symlinks
setopt correct                  # try to correct spelling of commands
setopt extended_glob            # activate complex pattern globbing
setopt glob_dots                # include dotfiles in globbing
setopt print_exit_value         # print return value if non-zero
setopt prompt_subst             # expansions/substitutions are performed in prompts
unsetopt beep                   # no bell on error
unsetopt bg_nice                # no lower prio for background jobs
unsetopt clobber                # must use >| to truncate existing files
unsetopt hist_beep              # no bell on error in history
unsetopt hup                    # no hup signal at shell exit
unsetopt ignore_eof             # do not exit on end-of-file
unsetopt list_beep              # no bell on ambiguous completion
unsetopt rm_star_silent         # ask for confirmation for `rm *' or `rm path/*'
print -Pn "\e]0; %n@%M: %~\a"   # terminal title

##
# Completions
##

autoload -U compinit
compinit
zmodload -i zsh/complist
setopt hash_list_all            # hash everything before completion
setopt completealiases          # complete alisases
setopt always_to_end            # when completing from the middle of a word, move the cursor to the end of the word    
setopt complete_in_word         # allow completion from within a word/phrase
setopt correct                  # spelling correction for commands
setopt list_ambiguous           # complete as much of a completion until it gets ambiguous.
zstyle ':completion::complete:*' use-cache on               # completion caching, use rehash to clear
zstyle ':completion:*' cache-path ~/.zsh/cache              # cache path
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'   # ignore case
zstyle ':completion:*' menu select=2                        # menu if nb items > 2
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}       # colorz !
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate # list of completers to use

zstyle ':completion:*' verbose yes
zstyle ':completion:*' group-name ''
zstyle ':completion:*:manuals' separate-sections true

zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:*:kill:*:processes' list-colors "=(#b) #([0-9]#)*=29=34"
zstyle ':completion:*:*:killall:*' menu yes select
zstyle ':completion:*:killall:*' force-list always
users=($USER root)           # because I don't care about others
zstyle ':completion:*' users $users

# Generic completion with --help
compdef _gnu_generic gcc
compdef _gnu_generic gdb


##
# Plugins
##

source "$ZSH/theme.zsh"
source "$ZSH/git-prompt/git_prompt.zsh"
source "$ZSH/autosuggestions/zsh-autosuggestions.zsh"
source "$ZSH/syntax-highlighting/zsh-syntax-highlighting.zsh"
source "$ZSH/history-substring-search/zsh-history-substring-search.zsh"

